#!/usr/bin/env python
PACKAGE = "apf_pathplanner_tutorial"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("potential_field_rows",                 int_t, 0, "A int parameter", 240, 1, 500)
gen.add("potential_field_cols",                 int_t, 0, "A int parameter", 240, 1, 500)
gen.add("potential_field_resolution",           double_t, 0, "A double parameter", 0.05, 0.01, 1)
gen.add("weight_attraction_field",              double_t, 0, "A double parameter", 0.1, 0, 10)
gen.add("weight_repulsion_field",               double_t, 0, "A double parameter", 0.1, 0, 10)
gen.add("distance_threshold_repulsion_field",   double_t, 0, "A double parameter", 0.3, 0, 2)
gen.add("max_path_length",                      double_t, 0, "A double parameter", 6.0, 0.1, 10)
gen.add("path_search_range",                    int_t, 0,   "A int parameter", 1, 1, 10)
gen.add("path_weight_potential",                double_t, 0, "weight apf for avoiding local minimum", 0, 0, 1)
gen.add("path_weight_pose",                     double_t, 0, "weight pose for avoiding local minimum", 1, 0, 1)

gen.add("potential_field_grid_filter",          str_t, 0, "A string parameter", "or")
gen.add("obstacle",                             bool_t, 0, "A Boolean parameter", False)
gen.add("goal",                                 bool_t, 0, "A Boolean parameter", False)
gen.add("around_goal",                          bool_t, 0, "A Boolean parameter", False)
gen.add("robot",                                bool_t, 0, "A Boolean parameter", False)
gen.add("repulsion_inside",                     bool_t, 0, "A Boolean parameter", False)
gen.add("repulsion_edge",                       bool_t, 0, "A Boolean parameter", False)
gen.add("path",                                 bool_t, 0, "A Boolean parameter", False)
gen.add("local_minimum",                        bool_t, 0, "A Boolean parameter", True)

exit(gen.generate(PACKAGE, "apf_pathplanner_tutorial", "APFPathPlannerTutorial"))